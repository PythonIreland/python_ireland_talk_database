id,speaker1,speaker2,speaker_id1,speaker_id2,title,room_id,room,start_at,end_at,description
384574,Paul Banahan,,a67570c9-bfbb-4e5c-a03e-ac10bd3e623f,,Coding on the Healthcare Frontline: Developing Medical Imaging AI from within an Irish Hospital,27388,Room 1,2022-11-12T09:30:00.0000000Z,2022-11-12T10:20:00.0000000Z,"Exploring the application of python software solutions in radiology that are in use and in development in an Irish Hospital. From use case discussions to data acquisition and modelling, this session will detail the development processes for Artificial Intelligence in Irish Radiology."
378451,Ben Fagan,,b2b1dab7-4e44-44c1-8de4-06fa631212cc,,Python draws pixels: starting a basic Gameboy emulator in Python,27388,Room 1,2022-11-12T10:35:00.0000000Z,2022-11-12T11:10:00.0000000Z,"Nintendo's humble Gameboy is an interesting project for the reasonably advanced programmer. Seemingly straightforward in design, and with no operating system to speak of, it nevertheless provides a challenge to those who have never worked on creating a virtual version of a games console.This talk will focus on the journey of getting a simple Gameboy emulator working in Python. It will go from getting some basic CPU commands working to getting a basic version of Tertris running - the ""Hello World"" of emulation."
374537,Liam Brannigan,,882e4faf-b716-4892-ac9f-994682e7708f,,Dataframes in python: a new era begins,27389,Room 2,2022-11-12T10:35:00.0000000Z,2022-11-12T11:10:00.0000000Z,"Pandas has been the mainstay of data processing in python for over 10 years. However, new libraries building on radically different concepts are making pandas obsolete. This talk will introduce 3 of the most promising new libraries: DuckDB, Vaex and Polars and show the use cases where they excel"
381417,Max Vizard,,9161a888-6360-44c2-bf65-8af9640d3c46,,Workshop: Intro to MicroPython,27390,Workshops 1 - 1st Floor,2022-11-12T10:35:00.0000000Z,2022-11-12T13:05:00.0000000Z,"A guided introduction to using MicroPython to control LEDs, buttons, sensors and more. Starts with a quick overview presentation and then attendees can work through the material at their own pace. MicroPython hardware provided for the session, attendees just need their own laptop and a MicroUSB cable."
379178,Simer Anand,,91c9ba2d-57ae-484f-bcc7-65bd3c00bc9d,,Getting started with Python Asyncio,27388,Room 1,2022-11-12T11:40:00.0000000Z,2022-11-12T12:15:00.0000000Z,"My session will be for the beginners who aren't of running the Python programs in concorrurent fashion and for the experienced programmers who are aren't just using the asyncio due to lack of easy to understand examples.Topics:- Talk about Parallelism, Concurrent, Multi-Threading and Multi-Processing, - Introduction to Concurrency in Python using Asyncio- Understanding of keywords async, await and components of Asncio,- Asyncio in Jupyter Notebooks- Asyncio examples - Q/A"
379467,Stephen McInerney,,a2b6f72c-cf4e-4bba-8d6e-61d3b2adcf00,,"NLP, Topic Modeling and Scraping of conference talks to find which topics are hot and not",27389,Room 2,2022-11-12T11:40:00.0000000Z,2022-11-12T12:15:00.0000000Z,"NLP (Natural Language Processing) and Topic Modeling are subdomains of Machine Learning which are core technologies for Python data scientists; and the automated collection of data by Scraping (in a TOS-compliant,ethical way) is a rarely-discussed practice."
370030,Richard Rowland,,8df90c47-5bc9-49d6-9702-2f94f3eff945,,"Why ""Hello World"" is a Massive Operation - From Python code to Stack Virtual Machine",27388,Room 1,2022-11-12T12:20:00.0000000Z,2022-11-12T13:05:00.0000000Z,"Python is a widely-used programming language thanks to its simple code syntax, but this convenience is brought by the hard work of the compiler. Among the many implementations (like PyPy and JPython), we will look at the most widely used CPython implementation. The talk will look at the compilation steps, and examine how the resulting bytecode will be executed in the Python virtual machine. Before a simple string is displayed on a terminal, CPython processes code performs complicated tasks from lexical analysis, parsing, compilation, and to evaluation loop. Even executing a simple program like print(“Hello world”) requires this laborious process performed instantly on the computer. By understanding the execution pipeline, we can identify execution bottlenecks to improve code performance."
369005,Linda Smith,,203b80fc-690c-4f0b-a78e-af9d0fc3dd19,,Assigning taxonomy to microbiome viruses using python,27389,Room 2,2022-11-12T12:20:00.0000000Z,2022-11-12T13:05:00.0000000Z,"During my PhD I saw the need for a tool which can assign accurate taxonomy to viral metagenomic sequences. Unlike bacterial DNA which can be accurately classified by looking at a highly conserved 16S rRNA region, viruses have no such universal marker gene and a lot of viral sequences have been described as ""viral dark matter"" as they have no hits to known sequences in reference databases. I decided to write a tool using python. I would like to describe the problem and my approach using python. The steps involved required data collection, data processing and cleaning, analysis using pandas and numpy, and visualization."
379977,Dom Weldon,,e59f5ac7-45c2-401d-8f74-98f74f154624,,It's Your Call(able): a tour of Python's callable (function) interface,27388,Room 1,2022-11-12T14:00:00.0000000Z,2022-11-12T14:35:00.0000000Z,"A deep dive into python functions and the callable interface surrounding them. We take a tour into everything that happens on on a “def” line in Python, and explore how to make the most of all the rich metadata provided about functions, before going into detail hacking the Python decorator pattern.AbstractFunctions are fundamental to python, and are amongst the first features of python that most users learn. We call a function with arguments, and it returns a value. However, there is more to this callable interface than meets the eye, and there are lots of useful and powerful things we can do with the callable interface. You may have come across many of these already: (anonymous) lambda functions, the call magic method, the decorator pattern, the doc property, and modules like functools and inspect which provide detailed about functions and allow us to alter functions at runtime. The now-retired Python 3.6 release added typing annotations to this mix, and opened up a new world of metadata to use alongside your callables.Lots of libraries, particularly web frameworks like Flask, Django, and FastAPI, and testing toolkits like pytest, use this callable interface to implement their API. As developers, understanding these advanced features of python’s callable interface is particularly useful when writing generic, automation focused code, and understanding how such prominent libraries work.This talk gives a deep-dive into python functions, and the associated callable interface. We’ll start with a quick tour of the basics, before covering python’s more advanced callable features, and exploring some examples about how, why, and when you may wish to use these features yourself."
398629,James Shields,,269cc6c1-b829-4ad1-9440-1398062a29b8,,Hacking a Python Hackathon,27389,Room 2,2022-11-12T14:00:00.0000000Z,2022-11-12T14:35:00.0000000Z,A story about organizing an internal on-site python hackathon and all that can go wrong about it
383391,Gauri Vaidya,Meghana Kshirsagar,a9dfd98d-3232-4653-94fc-529227bba202,47cfc842-ad9a-4b14-8267-84e2c182c299,Workshop: SHIELD: Do it the safe way,27390,Workshops 1 - 1st Floor,2022-11-12T14:00:00.0000000Z,2022-11-12T15:30:00.0000000Z,"Abstract:Securing sensitive and personal digital health information possesses vast challenges in the form of unauthorized leakages, cyber threats, and ransomware to name a few. However, the right tools can pave the way toward preserving privacy and mitigating the hesitancy around sensitive data sharing. We demonstrate our cryptographically secured tool SHIELD, a pseudo-random number generator holding the promise to encrypt sensitive information through random sequences produced as output and proven to be resilient to brute force attacks. This demonstration will involve a number of python libraries and the target audience is intermediate and advanced python users though beginners are more than welcome.Description:This workshop is for beginners and intermediate learners of Python. In this workshop, we will cover building a random number generator using python and Grammatical Evolution, an evolutionary algorithm from scratch. Don’t worry if you have any background experience in Grammatical Evolution or cryptography, we will cover them in the workshop. We will use PonyGE2 to generate high entropy seeds and demonstrate how to generate cryptographically secure keys from these seeds which can be used in cryptographic applications such as blockchains (Ryan, C., Kshirsagar, M., Vaidya, G. et al. Design of a cryptographically secure pseudo-random number generator with grammatical evolution. Sci Rep 12, 8602 (2022)After this workshop, you will be able to learn (1) generating high-quality seeds for a random number generator (2) generating random numbers (3) generating cryptographically secure keys.Workshop duration: 120 minutes"
378528,Parisa Gregg,Myles Mitchell,3190f46e-1f30-4fca-a13d-89d408f4e162,a455a953-2feb-4694-9dce-3c3bed8df6f6,Workshop: Automated reporting with Quarto,28417,Workshops 2 - 1st Floor,2022-11-12T14:00:00.0000000Z,2022-11-12T17:00:00.0000000Z,"Quarto is an open-source, easy to use, technical publishing system. It allows you to dynamically create reports in multiple formats including HTML, PDF, MS Word, and even presentation slides. This workshop will provide an introduction to Quarto and you will leave with the ability to create and customise your own static and interactive reports.Topics covered:- Creating documents using Markdown syntax- Generating reports in multiple formats- Embedding Python code into reports- Embedding static and interactive plots- Building reports from Jupyter notebooksBy the end of this workshop participants will be able to:- create and customise dynamically generated documents that weave together text and Python code.- generate beautifully formatted reports in HTML, PDF, and MS Word formats.No previous experience in Quarto or Markdown is necessary. However, basic familiarity with Python and some knowledge of plotting in Python will be assumed."
365946,Christian Ledermann,,f42d6a73-7a90-4856-817e-a82f357dcc24,,"A Tale of two Kitchens, hyper modernising your code base.",27388,Room 1,2022-11-12T14:40:00.0000000Z,2022-11-12T15:15:00.0000000Z,"When starting a new python project, the “hypermodern” python ‘template’ is a popular choice. Its style is opinionated and strict, and it brings a consistent style and today's best practices. How do I bring my legacy code base up to this standard?A Consistent style and standard and the consistent use of the same tools in all your code, makes it easier to reason about, reduces context switching, thus reducing waste (in the LEAN sense). A clean environment is good for your health and safety, enabling you to deliver quality faster.This talk goes deeper into how to modernise your legacy code base to reduce your technical debt, to make it easier for you to tackle the real challenges without ever having to discuss a style guide again. It will provide tips, tricks and tools to make your “hypermodernization” effort as smooth and easy as possible."
364651,Inder Preet,,3b10638f-c2a9-4960-a6d2-3ee709af797d,,Pruning and quantization for deep neural networks,27389,Room 2,2022-11-12T14:40:00.0000000Z,2022-11-12T15:15:00.0000000Z,"Neural networks (NN) are very potent at solving many problems in computer vision, time series analysis, etc. But the state-of-the-art NNs having millions or even billions of neurons which make them impossible to deploy on edge devices. Hence, model compression techniques like pruning and quantization are put to reduce the computational and memory footprint of NNs. Here, we present a novel technique to prune NNs which removes redundant neurons and significantly compress it. We try it on benchmark datasets and deep NNs like ImageNet and ResNets and show how the pruned NN performs relative to the unpruned NN and other pruning techniques."
379024,Liliya Akhtyamova,,eabdaa00-584d-4308-9565-f31ae4877c66,,Making MVP before a fully-fledged product. How and why?,27388,Room 1,2022-11-12T15:45:00.0000000Z,2022-11-12T16:20:00.0000000Z,"Data Scientists often wear many hats. One of them is building and presenting an MVP. While creating charts and tables may suffice in some cases, building UI is more desirable in other cases. This talk will cover when UI is needed, the most popular Python low-code UI frameworks, and the step-by-step process of building UI that allows gathering and storing user feedback."
377714,Murilo Cunha,,99338add-2c54-42d5-ab22-8fe6656bd0d8,,Effective data science teams with databooks,27389,Room 2,2022-11-12T15:45:00.0000000Z,2022-11-12T16:20:00.0000000Z,"Jupyter notebook is a great tool for quick prototyping and exploration. For this reason, it's very popular in fields such as data science. However, it's JSON-like structure makes it hard to work with notebooks in teams, as it does not cope well with other software tools such as _git_.Allowing developers better version notebooks and provide better tools to compare and resolve conflicts can greatly improve the lives of developers. I have used Jupyter notebooks at different data science projects, have experimented with different tools to support better work with notebooks and _git_ and build my own tool ([databooks](https://databooks.dev/)) to that purpose.## Program- Agenda- Introduction- Data science and notebooks- Jupyter notebooks - What it is - Where you can find them- Issues with notebooks- Solution to those issues- Databooks - Demo - What it is - How it works## This talk is *not* about- Why you should use notebooks- How does Jupyter notebooks work- Data science- How to put notebooks in production- How does git work"
384648,Mark Smith,,18bfbd96-f9b6-4235-964c-ee27dec0acef,,Stupid Things I've Done With Python,27388,Room 1,2022-11-12T16:25:00.0000000Z,2022-11-12T17:00:00.0000000Z,"I have a GitHub repository that contains a compilation of all the awful code I've written over the years, abusing features like metaclasses, decorators, various __dunder__ methods, and the mutable nature of Python's underlying data structures.It's a funny way to see how Python works under the hood, but it's also educational.Really!Each of the tricks is entertainingly terrible. But they're also mostly self-contained ways to see what happens when you override certain behaviours of the Python language.Anyone with an intermediate level of Python understanding should be able to follow along and learn something.I will cover:* Replacing an imported module with a class, so attribute lookups can be @properties, with _hilarious_ results.* Overriding the `__sub__` magic method to create a hyphenated, fuzzy-matching version of a boolean.* Using __getattr__ to save time implementing all the functions in the `math` module.* Using __eq__ to make things that aren't really the same look the same.This talk is an entertaining tour of the Python Data Model, and the things you can do - if you're so inclined."
380238,Donal Byrne,,5070667c-1fb5-425f-8760-ebf04b3c56f2,,Introduction To Jax: the next step in high performance machine learning,27389,Room 2,2022-11-12T16:25:00.0000000Z,2022-11-12T17:00:00.0000000Z,"This talk will give an overview of Googles new high performance machine learning framework Jax. Here we will discuss what exactly Jax is and how it differs from other standard frameworks like Tensorflow and Pytorch, highlight the key features of Jax that allow for potentially massive reductions in training time, show some examples and use cases of Jax in action and finally discuss when you should consider using Jax for your next ML project."
381427,Max Vizard,,9161a888-6360-44c2-bf65-8af9640d3c46,,Home automation with MicroPython,27388,Room 1,2022-11-12T17:05:00.0000000Z,2022-11-12T17:40:00.0000000Z,"An overview of my custom home automation setup with Micropython controllers, Raspberry Pi server and graphite metrics. Will talk about building customised MicroPython firmware, MQTT protocol, graphite metrics stack and using crontab for timing the central heating."
384507,Sylvain Gubian,,295cc0fd-9333-4ad6-80e0-a4a991212586,,Dual Annealing for global optimization problems,27389,Room 2,2022-11-12T17:05:00.0000000Z,2022-11-12T17:40:00.0000000Z,"SciPy, the Python scientific toolkit provides developers, scientists, or engineers with a universally recognised and reliable algorithms set. In this session, we will demonstrate how to solve some real life problems with the help of Dual Annealing, using global optimisation."
387370,James Long,,bcaa8c87-00ed-4bcd-bfcb-04500e22f4d1,,"I would have written less code, but I didn’t have the time",27388,Room 1,2022-11-13T10:00:00.0000000Z,2022-11-13T10:40:00.0000000Z,"The first recorded instance of someone saying they would have written less if they had only had more time was probably the philosopher Blaise Pascal in 1657. So the idea that it’s hard to edit our thoughts down concisely is hardly new. However recent studies have shown that difficulty in “substractive thinking” may be an evolutionary adaptation which makes it harder to remove ideas (or even code) than it is to create more. In this keynote, JD Long will discuss how studies of substractive vs. additive thinking help us learn more about ourselves and how we code, including a few tips on how to build the skill of removal. With any luck he’ll do so with a bit a humor, a lot of facts, and many colorful metaphors."
372643,Stephen Finucane,,2152567e-6bf6-4bd6-a811-61cd34062630,,Zero-downtime upgrades with SQLAlchemy + Alembic,27388,Room 1,2022-11-13T10:45:00.0000000Z,2022-11-13T11:20:00.0000000Z,"Alembic is a database migrations tool written by the author of SQLAlchemy. Alembic is easy to get started with an provides a number of sensible defaults out-of-the-box. However, like SQLAlchemy itself, when you look under the hood you find a seriously capable engine capable of powering all sorts of database schema migrations. It can even auto-generate the migration files themselves!In this presentation, we seek to explore some of these advanced features by implementing a pattern - the expand-contract pattern - that can allow for near zero-downtime database upgrades."
367943,Rebecca Martin,,cccbb74d-4831-49f5-98a5-5dcc59745041,,Fighting Bots with Python and Machine Learning,27389,Room 2,2022-11-13T10:45:00.0000000Z,2022-11-13T11:20:00.0000000Z,"Over lockdown, I re-explored old games that I had played in the past, one of them being League of Legends. One thing that interested me in particular is people using automated scripts or bots to play the game for them, often times to get the account to the lowest rank possible, and sell those accounts on for a substantial amount of money. This behaviour ruins the game experience for the rest of the players in the team, and so faced with this problem I aim to present a potential solution, using Python and machine learning libraries. As this is my first proper experience using machine learning in Python, I hope to share my insights on what I have learnt from my personal project and what you can take away from my experiences."
383392,Meghana Kshirsagar,Gauri Vaidya,47cfc842-ad9a-4b14-8267-84e2c182c299,a9dfd98d-3232-4653-94fc-529227bba202,Workshop: A picture is worth a thousand words!,27390,Workshops 1 - 1st Floor,2022-11-13T10:45:00.0000000Z,2022-11-13T12:15:00.0000000Z,"Abstract:Health data is bundled with a wealth of information. Mining interpretable and correct insights from medical data is exacting. However, the choice of visualisation tools holds the power of unraveling intuition relatively quickly and with simplicity. This workshop introduces beginners as well as intermediate python users on wisely using the right plots and graphs to intelligently discern the rich information hidden in healthcare data. In this workshop, we will use the COVID-19 real world datasets scraped from JHU CSSE and worldometer. We wil demonstrate hands-on on how to build interesting visualizations using matplotlib and plotly libraries in Python during the course of the workshop.Description:This workshop is for Python beginners and intermediate learners. We assume you have a laptop and basic understanding of Python language and libraries. Even if you don’t have any prior experience with Python, don’t worry, we will cover them for you in the workshop.During this workshop, we will together build smart visualisations using a combination of data visualisation python libraries (matplotlib, plotly) using COVID-19 open source dataset (https://github.com/imdevskp/covid_19_jhu_data_web_scrap_and_cleaning ).We will cover the following graphs under visualisation:2-d bar charts2-d line charts2-d tree maps2-d region graphs3-d Scatter Plot3-d Area graph After this workshop, you will be able to determine the correct choice of graphs for a given set of data, multiple ways to extract insights from them and to wisely choose the libraries from Python for plotting.Workshop duration: 90 minutes"
374347,Igor Mosyagin,,b63f0fd8-5c48-4c9b-b0b0-696fe0b20abd,,Embarrasingly parallel python with a little help of redis,27388,Room 1,2022-11-13T11:25:00.0000000Z,2022-11-13T12:00:00.0000000Z,"""Oh, if only I could just chunk the data and process it in parallel"". Sounds familiar? Well what if I tell you that it's very simple to do! If you do some small tweaks to your code and allow redis to help you do the heavy lifting, that is.In this talk I'll lay down some theory on how you can identify and approach such problems and together we'll dive into a few practical examples"
384380,Ritik Agarwal,,2aff9ed1-826b-406b-b4e8-f98e77477a0c,,FAST API and Deploying ML Models using it on AWS,27389,Room 2,2022-11-13T11:25:00.0000000Z,2022-11-13T12:00:00.0000000Z,"FastAPI is a quite new modern, fast (high-performance), web framework for building APIs using Python. I will be speaking and demonstrating about FastAPI from basics of creating an API to ultimately deploy a full Pytorch Model on AWS using this framework.There are many popular frameworks that can be used to do this task of deploying ML models like Flask and Django. Django is usually used for large scale application and takes quite a bit time to set up that while Flask is usually your go-to for quickly deploying your model on a web app.FASTAPI is becoming quite popular, so much so that companies like Netflix and Uber are using it. So let’s understand what’s making FastAPI so popular,1)FastAPI is much faster than flask as it is built on ASGI (Asynchronous Server Gateway Interface) whereby it supports concurrency / asynchronous code. Fa2) Unlike Flask, FastAPI provides an easier implementation for Data Validation to define the specific data type of the data you send.3)Automatic Docs to call and test your API(Swagger UI and Redoc).4)FastAPI comes with built-in support for Asyncio, GraphQL and Websockets.Its a new framework and not much people have used it ,so it will definitely be a good experience for them to learn about it and do a hands on tutorial to deploy ML models using it."
374071,Allyn Hunt,,f41f5963-450e-44f0-93d0-deb9fbdc05f8,,"Destiny-Focus: A Python and ReactJS powered stat tracking and sharing app for Destiny 2, the game",27388,Room 1,2022-11-13T12:05:00.0000000Z,2022-11-13T12:40:00.0000000Z,"This talk will focus on the creation of a stat tracking and sharing application for the game Destiny 2.Destiny-Focus is an app for Destiny the game, helping you focus on improving particular aspects of your playstyle, for casual or competitive PvP, PvE, or Raiding game modes. To achieve this, Destiny-Focus allows you to choose an area you want to focus on improving, such as your PvP Kill / Death Ratio (K/D R) or your accuracy with a particular weapon type, such as tracking headshots with your favourite sniper.Destiny-Focus pulls data from your last (30-200) games, analyses the data, and gives users actionable feedback, or focus goals, to help improve their gamestyle.Players are also able to search for their friends or favourite streamers accounts, and view their game stats and focus goals.Destiny-Focus is built with a Flask backend and a frontend designed in ReactJS and TypeScript. The Flask app is used for user authentication, storing links to liked activities, storing the game ""Manifest"" details of in game assets - such as weapons and armour. Users can also like and share their favourite games with their friends. Liked games are stored in a PostgreSQL database and a GUI was designed to help playuers navigate and share their favourite games.The app builds a sharable link where the ""Post Game Carnage Report"" can be shared with friends, without authorization, even if they don't have Destiny accounts."
372482,Jim Dowling,,fe1a9167-bf05-4eb9-ab00-a76636427371,,Data Validation for ML using Great Expectations and Hopsworks,27389,Room 2,2022-11-13T12:05:00.0000000Z,2022-11-13T12:40:00.0000000Z,"Have you ever trained an awesome model just to have it break in production because of a null value? At its core a feature store needs to provide reliable features to data scientists to build and productionize models. So how can we avoid garbage in, garbage out situations? Great expectations is the most popular library for data validation, and so the two are a natural fit. In this talk we will cover the core concepts of Great Expectations and how you can leverage them in a feature store."
365589,Weichen Huang,,6a278030-691d-44e9-b7a8-8908418312b5,,Brain age prediction using neural networks,27390,Workshops 1 - 1st Floor,2022-11-13T12:15:00.0000000Z,2022-11-13T12:50:00.0000000Z,"Brain age prediction can be applied to measure the difference between an individual's predicted age and their chronological age. The difference between an individual’s predicted and chronological age is a phenotype of relevance to ageing and brain disease. We present a new deep learning approach to predict brain age from a T1-weighted MRI. The method utilizes two datasets: IXI and CamCAN, and leverages novel neural network architectures, resulting in an improved accuracy rate."
371998,David Renton,,cb22ae61-5cdc-412c-a205-baaf5c573826,,"Getting work completed, and following up, and following up; with Python and other things.",27388,Room 1,2022-11-13T14:00:00.0000000Z,2022-11-13T14:35:00.0000000Z,"My journey of using Python to automate the creation of Jira epics, stories and tasks. Then building on this time saver to create a task communication campaign system using AWS serverless and AWS SES.I spend a lot of time creating tickets from spreadsheets so I automated the process. When that was finished I found myself having to manually add stories after the initial run if work was added or not scoped properly. So I built a way to take care of that. Then what happens when you have 1000 stories and need to follow up on only the ones that are not closed.I found myself in a constant loop of following up on tickets so I built a solution that I would like to show that uses the requests, json and boto3 libraries."
367767,Cheuk Ting Ho,,e142a8fb-ac27-4c73-96ec-e4f1fe620ca3,,Trying No GIL on Scientific Programming,27389,Room 2,2022-11-13T14:00:00.0000000Z,2022-11-13T14:35:00.0000000Z,"Recently Sam Gross, the author of nogil fork on Python 3.9, demonstrates the GIL can be removed. For scientific programs which use heavy CPU-bound processes, it could be a huge performance improvement. In this talk, we will see if this is true and compare the nogil version to the original."
379551,Yosef Arbiv,,09b9be88-da83-4558-b160-ba00e52513d5,,Workshop: OpenTelemetry,27390,Workshops 1 - 1st Floor,2022-11-13T14:00:00.0000000Z,2022-11-13T16:55:00.0000000Z,"OpenTelemetry is getting more and more attention as it becomes the industry standard for distributed tracing and observability.With more than 50 repos on github and a bunch of SDKs and APIs it can look overwhelming but once you understand the different components that it is built of it can be powerful and easy to use.This session will introduce the fundamentals of OpenTelemetry and how to use it in order to get metrics and traces from your app. We will build an application, instrument it with OpenTelemetry and analyze it on a UI backend.After this session, you will be able to understand how to add auto instrumentation, traces, and metrics to your code. How to collect them and present them on a backend UI, and how to analyze them in order to debug your application.Requirements:Basic knowledge of pythonLaptop"
384366,Dina Bavli,,a75e1b94-c3a1-4d6a-ab61-d5f06b90708a,,Everybody Is an Influencer– Which Influencer Are You?,27388,Room 1,2022-11-13T14:40:00.0000000Z,2022-11-13T15:15:00.0000000Z,"We live in an era where most human communication is online across social platforms, and the content of those platforms influences our day-to-day decisions. But, who influences us? And how? Researching online influence and persuasion, I answered just that.In this lecture, I will intuitively cover basic concepts of SNA (social network analysis) and explain how they are used to define different types of influencers and quantify influence using the NetworkX python package. Sometimes research is about the definitions. Let me show you and suggest how you can implement those concepts."
384732,Muhammad Atif Qureshi,,d1f931e0-c358-4e32-93d6-c6b8b3dcebeb,,Rapid Cues for Research: COVID-19 Exploratory Search System Using Taxonomies,27389,Room 2,2022-11-13T14:40:00.0000000Z,2022-11-13T15:15:00.0000000Z,"RCES, Rapid Cues for Exploratory Search is a human-centric search system developed in an attempt to navigate scientific literature related to COVID-19. It is analogous to a telescope that can rapidly discover concepts related to COVID-19 and speed up the process of finding the needle in the haystack of the knowledge pool. It is built on top of knowledge discovery techniques enabling users to explore COVID-19 concepts easily."
384390,Sonam Pankaj,,e9839261-7364-4410-b37f-187047d57d06,,Biases in Language models and it's explainability using shap,27388,Room 1,2022-11-13T15:45:00.0000000Z,2022-11-13T16:20:00.0000000Z,"Language models are becoming bigger and bigger breaking benchmarks like Blue and Blurb scores, but accuracy should not be the only thing that should be considered, but societal biases and inclusion as well. In this talk, we will look deeply into if these models are biased how we can mitigate bias and how we can use explainability frames like Shap to understand models better in NLP."
384704,Ramon Perez,,c0584563-1fcb-458e-b250-9a564c0237a7,,Getting Started with Feature Stores,27389,Room 2,2022-11-13T15:45:00.0000000Z,2022-11-13T16:20:00.0000000Z,"As machine learning-powered applications become more ubiquitous, so do the tools we create and use to optimize development time and collaboration across teams. One such tool that has gained popularity in recent years is the feature store as its adoption helps solve pressing issues at the infrastructure level before and after machine learning takes place within a data science project. Because of the rise of machine learning, and because of the need to store features in better, more efficient ways, this workshop focuses on teaching participants how to get started developing and using feature stores. In particular, participants will learn how to combine feast--an open source feature store--alongside tools from the common data stack such as pandas and NumPy, and workflow orchestration tools such as Dagster, Prefect, and Metaflow. By the end of the workshop, participants will have operationalized analytics data using a feature store while ensuring consistency across training and serving data for machine learning projects.The workshop is divided into 4 sections of equal lengths each.1. In the first part, we cover what feature stores are as we deconstruct each component of an already built solution in a top-bottom approach.2. The second stage covers the interaction between a model and the online and offline sides of a feature store. More specifically, we walk through making predictions while using an online store built with feast.3. The third part is a walk-through of the lower level details of feast and the steps required to set up and manage a feature store locally before going to the cloud.4. Lastly, we cover different deployment options and design patterns, and discuss the limitations of open source feature stores when compared to proprietary solutions. In addition, we will also discuss the ways in which data science and machine learning teams across different industries could adopt feature stores."
393560,Alessandro Molina,,5fd9c77f-4fb0-4085-acac-7a33e23c44ff,,Apache Arrow as a full stack data engineering solution,27388,Room 1,2022-11-13T16:25:00.0000000Z,2022-11-13T17:00:00.0000000Z,"Apache Arrow has set itself as the standard data interchange format between processes and systems dealing with high amounts of data in the data engineering field. PyArrow is the Python implementation of Apache Arrow and it provides access to all Apache Arrow features.Arrow has evolved as a on-disk storage format, an in-memory format, a format to exchange data over network and a compute engine. This allows it to be used as a full-stack solution in the data engineering world, and we will see how we can combine those capabilities to build a fully functional data engineering solution that is incredibly effective and fast."
