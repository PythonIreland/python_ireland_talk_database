version: '3.8'
services:
  nginx:
    image: nginx:1.21
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8000:80
    depends_on:
      - backend
      - frontend

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: talks_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: uvicorn backend.run:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8001:8000"
    volumes:
      - ./backend:/app/backend:cached
      - ./lib:/app/lib:cached
      - ./data:/app/data:cached
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/talks_db
      - PYTHONPATH=/app
    depends_on:
      postgres:
        condition: service_healthy
    working_dir: /app

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    stdin_open: true
    volumes:
      - './frontend:/app:cached'
      - './frontend/node_modules:/app/node_modules:cached'
    environment:
      - NODE_ENV=development

volumes:
  postgres_data:
